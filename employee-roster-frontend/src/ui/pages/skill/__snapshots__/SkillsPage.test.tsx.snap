// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Skills page DataTable newRowWrapper should be EditableSkillRow 1`] = `
<TableRow>
  <TableCell
    columnName="Trans(i18nKey=name)"
  >
    <TextInput
      onChange={[Function]}
      value=""
    />
    <InputGroupText
      key="0"
    >
      <Tooltip
        content={
          <List
            style={
              Object {
                "color": "white",
              }
            }
          >
            <ListItem>
              Trans(i18nKey=skillEmptyNameError)
            </ListItem>
          </List>
        }
      >
        <WarningTriangleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      </Tooltip>
    </InputGroupText>
  </TableCell>
  <RowEditButtons
    isValid={false}
    onClose={[Function]}
    onSave={[Function]}
  />
</TableRow>
`;

exports[`Skills page DataTable rowWrapper should be SkillRow 1`] = `
<TableRow>
  <TableCell
    columnName="Trans(i18nKey=name)"
  >
    <Text>
      Skill
    </Text>
  </TableCell>
  <RowViewButtons
    onDelete={[Function]}
    onEdit={[Function]}
  />
</TableRow>
`;

exports[`Skills page clicking on the edit button in the viewer should show the editor 1`] = `
<EditableSkillRow
  isNew={false}
  onClose={[Function]}
  skill={
    Object {
      "id": 0,
      "name": "Updated Skill",
      "tenantId": 0,
      "version": 0,
    }
  }
/>
`;

exports[`Skills page clicking on the edit button in the viewer should show the editor 2`] = `
<TableRow>
  <TableCell
    columnName="Trans(i18nKey=name)"
  >
    <Text>
      Updated Skill
    </Text>
  </TableCell>
  <RowViewButtons
    onDelete={[Function]}
    onEdit={[Function]}
  />
</TableRow>
`;

exports[`Skills page clicking on the edit button should show editor 1`] = `
<EditableSkillRow
  isNew={false}
  onClose={[Function]}
  skill={
    Object {
      "id": 1,
      "name": "Skill",
      "tenantId": 0,
      "version": 0,
    }
  }
/>
`;

exports[`Skills page clicking on the edit button should show editor 2`] = `
<TableRow>
  <TableCell
    columnName="Trans(i18nKey=name)"
  >
    <Text>
      Skill
    </Text>
  </TableCell>
  <RowViewButtons
    onDelete={[Function]}
    onEdit={[Function]}
  />
</TableRow>
`;

exports[`Skills page should render correctly with a few skills 1`] = `
<DataTable
  columns={
    Array [
      Object {
        "name": "Trans(i18nKey=name)",
        "sorter": [Function],
      },
    ]
  }
  filterText=""
  filteredRows={
    Immutable.List [
      Object {
        "id": 0,
        "name": "Skill 1",
        "tenantId": 0,
        "version": 0,
      },
      Object {
        "id": 1,
        "name": "Skill 2",
        "tenantId": 0,
        "version": 0,
      },
    ]
  }
  history={
    Object {
      "action": "PUSH",
      "block": [MockFunction],
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "length": 1,
      "listen": [MockFunction],
      "location": Object {
        "hash": "",
        "pathname": "/0/skill",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [MockFunction],
    }
  }
  isReversed={false}
  itemsPerPage={10}
  location={
    Object {
      "hash": "",
      "pathname": "/0/skill",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": true,
      "params": Object {},
      "path": "/0/skill",
      "url": "localhost:8080/0/skill",
    }
  }
  newRowWrapper={[Function]}
  numOfFilteredRows={2}
  onSorterChange={[Function]}
  page={1}
  rowWrapper={[Function]}
  rowsInPage={
    Immutable.List [
      Object {
        "id": 0,
        "name": "Skill 1",
        "tenantId": 0,
        "version": 0,
      },
      Object {
        "id": 1,
        "name": "Skill 2",
        "tenantId": 0,
        "version": 0,
      },
    ]
  }
  sortByIndex={0}
  title="Trans(i18nKey=skills)"
/>
`;

exports[`Skills page should render correctly with no skills 1`] = `
<DataTable
  columns={
    Array [
      Object {
        "name": "Trans(i18nKey=name)",
        "sorter": [Function],
      },
    ]
  }
  filterText=""
  filteredRows={Immutable.List []}
  history={
    Object {
      "action": "PUSH",
      "block": [MockFunction],
      "createHref": [MockFunction],
      "go": [MockFunction],
      "goBack": [MockFunction],
      "goForward": [MockFunction],
      "length": 1,
      "listen": [MockFunction],
      "location": Object {
        "hash": "",
        "pathname": "/0/skill",
        "search": "",
        "state": undefined,
      },
      "push": [MockFunction],
      "replace": [MockFunction],
    }
  }
  isReversed={false}
  itemsPerPage={10}
  location={
    Object {
      "hash": "",
      "pathname": "/0/skill",
      "search": "",
      "state": undefined,
    }
  }
  match={
    Object {
      "isExact": true,
      "params": Object {},
      "path": "/0/skill",
      "url": "localhost:8080/0/skill",
    }
  }
  newRowWrapper={[Function]}
  numOfFilteredRows={0}
  onSorterChange={[Function]}
  page={1}
  rowWrapper={[Function]}
  rowsInPage={Immutable.List []}
  sortByIndex={0}
  title="Trans(i18nKey=skills)"
/>
`;

exports[`Skills page should render the editor correctly 1`] = `
<TableRow>
  <TableCell
    columnName="Trans(i18nKey=name)"
  >
    <TextInput
      onChange={[Function]}
      value="Skill"
    />
  </TableCell>
  <RowEditButtons
    isValid={true}
    onClose={[Function]}
    onSave={[Function]}
  />
</TableRow>
`;

exports[`Skills page should render the viewer correctly 1`] = `
<TableRow>
  <TableCell
    columnName="Trans(i18nKey=name)"
  >
    <Text>
      Skill
    </Text>
  </TableCell>
  <RowViewButtons
    onDelete={[Function]}
    onEdit={[Function]}
  />
</TableRow>
`;
