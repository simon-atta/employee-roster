// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Availability Roster Page should render correctly when creating a new availability via button 1`] = `
<Fragment>
  <span
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--100)",
        "display": "grid",
        "gridTemplateColumns": "auto auto auto 1fr",
        "height": "60px",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <TypeaheadSelectInput
      aria-label="Select Employee"
      emptyText="Trans(i18nKey=selectEmployee)"
      noClearButton={true}
      onChange={[Function]}
      optionToStringMap={[Function]}
      options={
        Array [
          Object {
            "color": "#FFFFFF",
            "contract": Object {
              "id": 5,
              "maximumMinutesPerDay": 10,
              "maximumMinutesPerMonth": 500,
              "maximumMinutesPerWeek": 70,
              "maximumMinutesPerYear": 6000,
              "name": "Basic Contract",
              "tenantId": 0,
              "version": 0,
            },
            "id": 4,
            "name": "Employee 1",
            "shortId": "e1",
            "skillProficiencySet": Array [
              Object {
                "id": 6,
                "name": "Not Required Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          },
          Object {
            "color": "#FFFFFF",
            "contract": Object {
              "id": 5,
              "maximumMinutesPerDay": 10,
              "maximumMinutesPerMonth": 500,
              "maximumMinutesPerWeek": 70,
              "maximumMinutesPerYear": 6000,
              "name": "Basic Contract",
              "tenantId": 0,
              "version": 0,
            },
            "id": 111,
            "name": "New Employee",
            "shortId": "e1",
            "skillProficiencySet": Array [
              Object {
                "id": 6,
                "name": "Not Required Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          },
        ]
      }
      value={
        Object {
          "color": "#FFFFFF",
          "contract": Object {
            "id": 5,
            "maximumMinutesPerDay": 10,
            "maximumMinutesPerMonth": 500,
            "maximumMinutesPerWeek": 70,
            "maximumMinutesPerYear": 6000,
            "name": "Basic Contract",
            "tenantId": 0,
            "version": 0,
          },
          "id": 4,
          "name": "Employee 1",
          "shortId": "e1",
          "skillProficiencySet": Array [
            Object {
              "id": 6,
              "name": "Not Required Skill",
              "tenantId": 0,
              "version": 0,
            },
          ],
          "tenantId": 0,
          "version": 0,
        }
      }
    />
    <WeekPicker
      aria-label="Select Week to View"
      onChange={[Function]}
      value={2018-07-01T00:00:00.000Z}
    />
    <ScoreDisplay
      indictmentSummary={
        Object {
          "constraintToCountMap": Object {},
          "constraintToScoreImpactMap": Object {},
        }
      }
      isSolving={false}
      score={
        Object {
          "hardScore": 0,
          "mediumScore": 0,
          "softScore": 0,
        }
      }
    />
    <SizeMe(Actions)
      actions={
        Array [
          Object {
            "action": [MockFunction],
            "isDisabled": false,
            "name": "Trans(i18nKey=publish)",
          },
          Object {
            "action": [MockFunction],
            "name": "Trans(i18nKey=schedule)",
          },
          Object {
            "action": [Function],
            "name": "Trans(i18nKey=refresh)",
          },
          Object {
            "action": [Function],
            "name": "Trans(i18nKey=createAvailability)",
          },
        ]
      }
    />
  </span>
  <Component
    isOpen={true}
    onClose={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
  <Component
    aria-label="Edit Shift"
    isOpen={false}
    onClose={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
  <Schedule
    dayStyle={[Function]}
    endAccessor={[Function]}
    endDate={2018-07-07T23:59:59.999Z}
    eventComponent={[Function]}
    eventStyle={[Function]}
    events={
      Array [
        Object {
          "end": 2018-07-02T00:00:00.000Z,
          "reference": Object {
            "employee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "endDateTime": 2018-07-02T00:00:00.000Z,
            "id": 123,
            "startDateTime": 2018-07-01T00:00:00.000Z,
            "state": "DESIRED",
            "tenantId": 0,
            "version": 0,
          },
          "start": 2018-07-01T00:00:00.000Z,
          "type": "Availability",
        },
        Object {
          "end": 2018-07-01T17:00:00.000Z,
          "reference": Object {
            "contractMinutesViolationPenaltyList": Array [],
            "desiredTimeslotForEmployeeRewardList": Array [],
            "employee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "endDateTime": 2018-07-01T17:00:00.000Z,
            "id": 1,
            "indictmentScore": Object {
              "hardScore": 0,
              "mediumScore": 0,
              "softScore": 0,
            },
            "originalEmployee": null,
            "pinnedByUser": false,
            "requiredSkillSet": Array [],
            "requiredSkillViolationList": Array [],
            "rotationEmployee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 7,
              "name": "Rotation Employee",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "rotationViolationPenaltyList": Array [],
            "shiftEmployeeConflictList": Array [],
            "spot": Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "startDateTime": 2018-07-01T09:00:00.000Z,
            "tenantId": 0,
            "unassignedShiftPenaltyList": Array [],
            "unavailableEmployeeViolationList": Array [],
            "undesiredTimeslotForEmployeePenaltyList": Array [],
            "version": 0,
          },
          "start": 2018-07-01T09:00:00.000Z,
          "type": "Shift",
        },
      ]
    }
    key="4"
    onAddEvent={[Function]}
    onUpdateEvent={[Function]}
    popoverBody={[Function]}
    popoverHeader={[Function]}
    showAllDayCell={true}
    startAccessor={[Function]}
    startDate={2018-07-01T00:00:00.000Z}
    titleAccessor={[Function]}
    wrapperStyle={[Function]}
  />
</Fragment>
`;

exports[`Availability Roster Page should render correctly when loaded 1`] = `
<Fragment>
  <span
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--100)",
        "display": "grid",
        "gridTemplateColumns": "auto auto auto 1fr",
        "height": "60px",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <TypeaheadSelectInput
      aria-label="Select Employee"
      emptyText="Trans(i18nKey=selectEmployee)"
      noClearButton={true}
      onChange={[Function]}
      optionToStringMap={[Function]}
      options={
        Array [
          Object {
            "color": "#FFFFFF",
            "contract": Object {
              "id": 5,
              "maximumMinutesPerDay": 10,
              "maximumMinutesPerMonth": 500,
              "maximumMinutesPerWeek": 70,
              "maximumMinutesPerYear": 6000,
              "name": "Basic Contract",
              "tenantId": 0,
              "version": 0,
            },
            "id": 4,
            "name": "Employee 1",
            "shortId": "e1",
            "skillProficiencySet": Array [
              Object {
                "id": 6,
                "name": "Not Required Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          },
          Object {
            "color": "#FFFFFF",
            "contract": Object {
              "id": 5,
              "maximumMinutesPerDay": 10,
              "maximumMinutesPerMonth": 500,
              "maximumMinutesPerWeek": 70,
              "maximumMinutesPerYear": 6000,
              "name": "Basic Contract",
              "tenantId": 0,
              "version": 0,
            },
            "id": 111,
            "name": "New Employee",
            "shortId": "e1",
            "skillProficiencySet": Array [
              Object {
                "id": 6,
                "name": "Not Required Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          },
        ]
      }
      value={
        Object {
          "color": "#FFFFFF",
          "contract": Object {
            "id": 5,
            "maximumMinutesPerDay": 10,
            "maximumMinutesPerMonth": 500,
            "maximumMinutesPerWeek": 70,
            "maximumMinutesPerYear": 6000,
            "name": "Basic Contract",
            "tenantId": 0,
            "version": 0,
          },
          "id": 4,
          "name": "Employee 1",
          "shortId": "e1",
          "skillProficiencySet": Array [
            Object {
              "id": 6,
              "name": "Not Required Skill",
              "tenantId": 0,
              "version": 0,
            },
          ],
          "tenantId": 0,
          "version": 0,
        }
      }
    />
    <WeekPicker
      aria-label="Select Week to View"
      onChange={[Function]}
      value={2018-07-01T00:00:00.000Z}
    />
    <ScoreDisplay
      indictmentSummary={
        Object {
          "constraintToCountMap": Object {},
          "constraintToScoreImpactMap": Object {},
        }
      }
      isSolving={false}
      score={
        Object {
          "hardScore": 0,
          "mediumScore": 0,
          "softScore": 0,
        }
      }
    />
    <SizeMe(Actions)
      actions={
        Array [
          Object {
            "action": [MockFunction],
            "isDisabled": false,
            "name": "Trans(i18nKey=publish)",
          },
          Object {
            "action": [MockFunction],
            "name": "Trans(i18nKey=schedule)",
          },
          Object {
            "action": [Function],
            "name": "Trans(i18nKey=refresh)",
          },
          Object {
            "action": [Function],
            "name": "Trans(i18nKey=createAvailability)",
          },
        ]
      }
    />
  </span>
  <Component
    isOpen={false}
    onClose={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
  <Component
    aria-label="Edit Shift"
    isOpen={false}
    onClose={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
  <Schedule
    dayStyle={[Function]}
    endAccessor={[Function]}
    endDate={2018-07-07T23:59:59.999Z}
    eventComponent={[Function]}
    eventStyle={[Function]}
    events={
      Array [
        Object {
          "end": 2018-07-02T00:00:00.000Z,
          "reference": Object {
            "employee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "endDateTime": 2018-07-02T00:00:00.000Z,
            "id": 123,
            "startDateTime": 2018-07-01T00:00:00.000Z,
            "state": "DESIRED",
            "tenantId": 0,
            "version": 0,
          },
          "start": 2018-07-01T00:00:00.000Z,
          "type": "Availability",
        },
        Object {
          "end": 2018-07-01T17:00:00.000Z,
          "reference": Object {
            "contractMinutesViolationPenaltyList": Array [],
            "desiredTimeslotForEmployeeRewardList": Array [],
            "employee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "endDateTime": 2018-07-01T17:00:00.000Z,
            "id": 1,
            "indictmentScore": Object {
              "hardScore": 0,
              "mediumScore": 0,
              "softScore": 0,
            },
            "originalEmployee": null,
            "pinnedByUser": false,
            "requiredSkillSet": Array [],
            "requiredSkillViolationList": Array [],
            "rotationEmployee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 7,
              "name": "Rotation Employee",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "rotationViolationPenaltyList": Array [],
            "shiftEmployeeConflictList": Array [],
            "spot": Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "startDateTime": 2018-07-01T09:00:00.000Z,
            "tenantId": 0,
            "unassignedShiftPenaltyList": Array [],
            "unavailableEmployeeViolationList": Array [],
            "undesiredTimeslotForEmployeePenaltyList": Array [],
            "version": 0,
          },
          "start": 2018-07-01T09:00:00.000Z,
          "type": "Shift",
        },
      ]
    }
    key="4"
    onAddEvent={[Function]}
    onUpdateEvent={[Function]}
    popoverBody={[Function]}
    popoverHeader={[Function]}
    showAllDayCell={true}
    startAccessor={[Function]}
    startDate={2018-07-01T00:00:00.000Z}
    titleAccessor={[Function]}
    wrapperStyle={[Function]}
  />
</Fragment>
`;

exports[`Availability Roster Page should render correctly when loading 1`] = `
<EmptyState
  variant="full"
>
  <EmptyStateIcon
    icon={[Function]}
  />
  <Trans
    components={
      Array [
        <Title
          headingLevel="h5"
          size="lg"
        />,
        <EmptyStateBody />,
        <Button
          aria-label="Employees Page"
          onClick={[Function]}
          variant="primary"
        />,
      ]
    }
    i18nKey="noEmployees"
    t={[MockFunction]}
  />
</EmptyState>
`;

exports[`Availability Roster Page should render correctly when solving 1`] = `
<Fragment>
  <span
    style={
      Object {
        "backgroundColor": "var(--pf-global--BackgroundColor--100)",
        "display": "grid",
        "gridTemplateColumns": "auto auto auto 1fr",
        "height": "60px",
        "padding": "5px 5px 5px 5px",
      }
    }
  >
    <TypeaheadSelectInput
      aria-label="Select Employee"
      emptyText="Trans(i18nKey=selectEmployee)"
      noClearButton={true}
      onChange={[Function]}
      optionToStringMap={[Function]}
      options={
        Array [
          Object {
            "color": "#FFFFFF",
            "contract": Object {
              "id": 5,
              "maximumMinutesPerDay": 10,
              "maximumMinutesPerMonth": 500,
              "maximumMinutesPerWeek": 70,
              "maximumMinutesPerYear": 6000,
              "name": "Basic Contract",
              "tenantId": 0,
              "version": 0,
            },
            "id": 4,
            "name": "Employee 1",
            "shortId": "e1",
            "skillProficiencySet": Array [
              Object {
                "id": 6,
                "name": "Not Required Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          },
          Object {
            "color": "#FFFFFF",
            "contract": Object {
              "id": 5,
              "maximumMinutesPerDay": 10,
              "maximumMinutesPerMonth": 500,
              "maximumMinutesPerWeek": 70,
              "maximumMinutesPerYear": 6000,
              "name": "Basic Contract",
              "tenantId": 0,
              "version": 0,
            },
            "id": 111,
            "name": "New Employee",
            "shortId": "e1",
            "skillProficiencySet": Array [
              Object {
                "id": 6,
                "name": "Not Required Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          },
        ]
      }
      value={
        Object {
          "color": "#FFFFFF",
          "contract": Object {
            "id": 5,
            "maximumMinutesPerDay": 10,
            "maximumMinutesPerMonth": 500,
            "maximumMinutesPerWeek": 70,
            "maximumMinutesPerYear": 6000,
            "name": "Basic Contract",
            "tenantId": 0,
            "version": 0,
          },
          "id": 4,
          "name": "Employee 1",
          "shortId": "e1",
          "skillProficiencySet": Array [
            Object {
              "id": 6,
              "name": "Not Required Skill",
              "tenantId": 0,
              "version": 0,
            },
          ],
          "tenantId": 0,
          "version": 0,
        }
      }
    />
    <WeekPicker
      aria-label="Select Week to View"
      onChange={[Function]}
      value={2018-07-01T00:00:00.000Z}
    />
    <ScoreDisplay
      indictmentSummary={
        Object {
          "constraintToCountMap": Object {},
          "constraintToScoreImpactMap": Object {},
        }
      }
      isSolving={true}
      score={
        Object {
          "hardScore": 0,
          "mediumScore": 0,
          "softScore": 0,
        }
      }
    />
    <SizeMe(Actions)
      actions={
        Array [
          Object {
            "action": [MockFunction],
            "isDisabled": true,
            "name": "Trans(i18nKey=publish)",
          },
          Object {
            "action": [MockFunction],
            "name": "Trans(i18nKey=terminateEarly)",
          },
          Object {
            "action": [Function],
            "name": "Trans(i18nKey=refresh)",
          },
          Object {
            "action": [Function],
            "name": "Trans(i18nKey=createAvailability)",
          },
        ]
      }
    />
  </span>
  <Component
    isOpen={false}
    onClose={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
  <Component
    aria-label="Edit Shift"
    isOpen={false}
    onClose={[Function]}
    onDelete={[Function]}
    onSave={[Function]}
  />
  <Schedule
    dayStyle={[Function]}
    endAccessor={[Function]}
    endDate={2018-07-07T23:59:59.999Z}
    eventComponent={[Function]}
    eventStyle={[Function]}
    events={
      Array [
        Object {
          "end": 2018-07-02T00:00:00.000Z,
          "reference": Object {
            "employee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "endDateTime": 2018-07-02T00:00:00.000Z,
            "id": 123,
            "startDateTime": 2018-07-01T00:00:00.000Z,
            "state": "DESIRED",
            "tenantId": 0,
            "version": 0,
          },
          "start": 2018-07-01T00:00:00.000Z,
          "type": "Availability",
        },
        Object {
          "end": 2018-07-01T17:00:00.000Z,
          "reference": Object {
            "contractMinutesViolationPenaltyList": Array [],
            "desiredTimeslotForEmployeeRewardList": Array [],
            "employee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "endDateTime": 2018-07-01T17:00:00.000Z,
            "id": 1,
            "indictmentScore": Object {
              "hardScore": 0,
              "mediumScore": 0,
              "softScore": 0,
            },
            "originalEmployee": null,
            "pinnedByUser": false,
            "requiredSkillSet": Array [],
            "requiredSkillViolationList": Array [],
            "rotationEmployee": Object {
              "color": "#FFFFFF",
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 7,
              "name": "Rotation Employee",
              "shortId": "e1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "rotationViolationPenaltyList": Array [],
            "shiftEmployeeConflictList": Array [],
            "spot": Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
            "startDateTime": 2018-07-01T09:00:00.000Z,
            "tenantId": 0,
            "unassignedShiftPenaltyList": Array [],
            "unavailableEmployeeViolationList": Array [],
            "undesiredTimeslotForEmployeePenaltyList": Array [],
            "version": 0,
          },
          "start": 2018-07-01T09:00:00.000Z,
          "type": "Shift",
        },
      ]
    }
    key="4"
    onAddEvent={[Function]}
    onUpdateEvent={[Function]}
    popoverBody={[Function]}
    popoverHeader={[Function]}
    showAllDayCell={true}
    startAccessor={[Function]}
    startDate={2018-07-01T00:00:00.000Z}
    titleAccessor={[Function]}
    wrapperStyle={[Function]}
  />
</Fragment>
`;

exports[`Availability Roster Page should render correctly when there are no employees 1`] = `
<EmptyState
  variant="full"
>
  <EmptyStateIcon
    icon={[Function]}
  />
  <Trans
    components={
      Array [
        <Title
          headingLevel="h5"
          size="lg"
        />,
        <EmptyStateBody />,
        <Button
          aria-label="Employees Page"
          onClick={[Function]}
          variant="primary"
        />,
      ]
    }
    i18nKey="noEmployees"
    t={[MockFunction]}
  />
</EmptyState>
`;
